import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from sklearn.metrics import r2_score
import plotly.graph_objects as go

# Configuration de la page
st.set_page_config(page_title="Application Isothermes d'Adsorption", layout="wide")

# Menu lat√©ral
menu = st.sidebar.radio("Navigation", ["\U0001F3E0 Pr√©sentation", "\U0001F9EA Analyse des donn√©es", "\U0001F52C Interpr√©tation des r√©sultats"])

# Pr√©sentation
if menu == "\U0001F3E0 Pr√©sentation":
    st.title("\U0001F331 Comparaison des Mod√®les d'Isothermes d'Adsorption")

    st.markdown("""
    **Optimisez vos exp√©riences avec les meilleurs mod√®les d‚Äôadsorption.**

    Cette application web vous permet de **comparer diff√©rents mod√®les d‚Äôisothermes d‚Äôadsorption**. Que vous soyez chercheur, ing√©nieur ou √©tudiant, cet outil vous aide √† choisir le meilleur mod√®le pour vos donn√©es exp√©rimentales d'adsorption. 

    ---
    ### \U0001F4D8 Mod√®les disponibles
    **Mod√®les √† deux param√®tres**
    - Langmuir
    - Freundlich
    - Tempkin
    - Jovanovich
    - Dubinin-Radushkevich
    - Mod√®le personnalis√© *(mod√®le innovant)*

    **Mod√®les √† trois param√®tres**
    - Sips
    - Toth
    - Khan
    - Redlich-Peterson

    ---
    ### ‚öôÔ∏è Fonctionnalit√©s
    1. **Importation de donn√©es CSV** contenant les colonnes `Ce` et `qe`
    2. **Ajustement automatique des mod√®les s√©lectionn√©s**
    3. **Affichage des courbes d‚Äôajustement**
    4. **Comparaison des performances selon R¬≤, AIC, AICc, BIC, RMSE, MAE**
    5. **Recommandation du meilleur mod√®le selon AIC et BIC**
    6. **Export des r√©sultats au format CSV**

    ---
    ### üöÄ Pourquoi utiliser notre application ?
    - Interface simple et intuitive
    - Comparaison visuelle et statistique claire
    - Analyse compl√®te avec export des r√©sultats possible
    - Int√©gration d‚Äôun **mod√®le personnalis√©**, plus flexible dans certains cas exp√©rimentaux

    ---
    ### \U0001F4E4 T√©l√©charger les r√©sultats
    Vous pouvez d√©sormais **exporter vos r√©sultats** (param√®tres ajust√©s, courbes, statistiques) en **CSV** depuis la section d'analyse.

    ---
    ### \U0001F4E9 Contact et Support
    Pour toute question ou suggestion, veuillez contacter :
    - **Nom :** AGOSSOU Gildas Fiacre
    - **Email :** gildas.agossou950@gmail.com

    ---
    **¬© 2025 AGOSSOU Gildas Fiacre. Tous droits r√©serv√©s.**
    """)

# Page d'analyse
elif menu == "\U0001F9EA Analyse des donn√©es":
    st.title("\U0001F9EA Analyse des Donn√©es d'Adsorption")
    st.markdown("""
    Importez vos donn√©es, s√©lectionnez les mod√®les et visualisez les courbes d'ajustement ainsi que les statistiques de performance.
    """)

    # Mod√®les d'adsorption
    def langmuir(Ce, q_m, K):
        return (q_m * K * Ce) / (1 + K * Ce)

    def freundlich(Ce, K, n):
        return K * Ce ** (1 / n)

    def tempkin(Ce, B, A):
        Ce = np.array(Ce)
        Ce = np.where(Ce <= 0, 1e-6, Ce)
        A = np.abs(A) + 1e-6
        return B * np.log(A * Ce)

    def dubinin_radushkevich(Ce, q_m, K):
        return q_m * np.exp(-K * (np.log(1 + 1 / Ce)) ** 2)

    def jovanovich(Ce, q_m, K):
        return q_m * (1 - np.exp(-K * Ce))

    def sips(Ce, q_m, K, n):
        return (q_m * K * Ce ** n) / (1 + K * Ce ** n)

    def toth(Ce, q_m, K, n):
        return (q_m * K * Ce) / ((1 + (K * Ce) ** n) ** (1 / n))

    def khan(Ce, q_m, K, n):
        return (q_m * K * Ce) / (1 + (K * Ce) ** n)

    def redlich_peterson(Ce, K, a, g):
        return (K * Ce) / (1 + a * Ce ** g)

    def custom_model(Ce, q_m, K):
        alpha = 0.45
        beta = 0.55
        return (q_m * K * Ce ** alpha) / (1 + K * Ce ** beta)

    model_dict_2_params = {
        "Langmuir": (langmuir, [405, 1.0]),
        "Freundlich": (freundlich, [1.0, 1.0]),
        "Tempkin": (tempkin, [1.0, 1.0]),
        "Dubinin-Radushkevich": (dubinin_radushkevich, [405, 1.0]),
        "Jovanovich": (jovanovich, [405, 1.0]),
        "Mod√®le personnalis√©": (custom_model, [405, 1.0])
    }

    model_dict_3_params = {
        "Sips": (sips, [405, 1.0, 1.0]),
        "Toth": (toth, [405, 1.0, 1.0]),
        "Khan": (khan, [405, 1.0, 1.0]),
        "Redlich-Peterson": (redlich_peterson, [1.0, 1.0, 0.9])
    }

    uploaded_file = st.file_uploader("\U0001F4C4 Importez un fichier CSV contenant les colonnes 'Ce' et 'qe'", type=["csv"])

    if uploaded_file is not None:
        data = pd.read_csv(uploaded_file)
        Ce = data["Ce"].values
        qe = data["qe"].values

        selected_models_2_params = st.multiselect("S√©lectionnez les mod√®les √† deux param√®tres :", list(model_dict_2_params.keys()), default=list(model_dict_2_params.keys()))
        selected_models_3_params = st.multiselect("S√©lectionnez les mod√®les √† trois param√®tres :", list(model_dict_3_params.keys()), default=list(model_dict_3_params.keys()))

        selected_models = selected_models_2_params + selected_models_3_params

        if selected_models:
            fig = go.Figure()
            fig.add_trace(go.Scatter(x=Ce, y=qe, mode='markers', name='Donn√©es exp√©rimentales', marker=dict(color='black')))

            results = []
            for name in selected_models:
                if name in model_dict_2_params:
                    model_func, initial_params = model_dict_2_params[name]
                else:
                    model_func, initial_params = model_dict_3_params[name]

                try:
                    params, _ = curve_fit(model_func, Ce, qe, p0=initial_params, maxfev=10000)
                    qe_pred = model_func(Ce, *params)
                    residuals = qe - qe_pred
                    sse = np.sum(residuals**2)
                    rmse = np.sqrt(np.mean(residuals**2))
                    mae = np.mean(np.abs(residuals))
                    r2 = r2_score(qe, qe_pred)

                    n_obs = len(qe)
                    k = len(params)
                    aic = n_obs * np.log(sse/n_obs) + 2 * k
                    aicc = aic + (2 * k * (k + 1)) / (n_obs - k - 1) if n_obs - k - 1 > 0 else np.nan
                    bic = n_obs * np.log(sse/n_obs) + k * np.log(n_obs)

                    results.append({"Mod√®le": name, "R¬≤": r2, "AIC": aic, "AICc": aicc, "BIC": bic, "SSE": sse, "MAE": mae, "RMSE": rmse})

                    fig.add_trace(go.Scatter(x=Ce, y=qe_pred, mode='lines', name=name))
                except Exception as e:
                    st.error(f"‚ùå Erreur pour {name} : {e}")

            st.plotly_chart(fig, use_container_width=True)

            results_df = pd.DataFrame(results).sort_values(by=["AIC", "BIC"])
            st.dataframe(results_df.style.format({"R¬≤": "{:.4f}", "AIC": "{:.2f}", "AICc": "{:.2f}", "BIC": "{:.2f}", "SSE": "{:.2f}", "MAE": "{:.4f}", "RMSE": "{:.4f}"}))

            best_model_aic = results_df.loc[results_df["AIC"].idxmin()]
            best_model_bic = results_df.loc[results_df["BIC"].idxmin()]

            st.markdown(f"### üéØ Meilleur mod√®le selon AIC : **{best_model_aic['Mod√®le']}**")
            st.markdown(f"### üéØ Meilleur mod√®le selon BIC : **{best_model_bic['Mod√®le']}**")

elif menu == "\U0001F52C Interpr√©tation des r√©sultats":
    st.title("\U0001F52C Interpr√©tation des R√©sultats")

    st.markdown("""
    ### üîé Interpr√©tation des Mod√®les d'Adsorption

    Cette section vous permet d'interpr√©ter les r√©sultats des mod√®les d'adsorption en fonction des param√®tres ajust√©s et des valeurs de performance. Ci-dessous, vous trouverez l'explication des principaux mod√®les utilis√©s dans cette application, ainsi que leur signification dans le contexte des r√©sultats exp√©rimentaux.

    #### 1. **Langmuir (Mod√®le √† deux param√®tres)**

    L‚Äôisotherme d‚Äôadsorption de Langmuir permet de comprendre comment un solut√© ou un gaz se fixe √† la surface d‚Äôun adsorbant. Elle suppose essentiellement que les mol√©cules de l‚Äôadsorbat forment une monocouche sur la surface de l‚Äôadsorbant, ce qui signifie que d√®s qu‚Äôun site de la surface est occup√©e par une mol√©cule, aucune autre mol√©cule ne peut venir s‚Äôy fixer. Ce mod√®le stipule aussi que les mol√©cules de l‚Äôadsorbat n‚Äôinteragissent pas entre elles.

    **Param√®tres :**
    - \(q_m\) : Capacit√© maximale d‚Äôadsorption (mg/g) ‚Äî La quantit√© maximale que l'adsorbant peut capturer.
    - \(K\) : Constante d‚Äô√©quilibre (L/mg) ‚Äî Mesure l'affinit√© entre l'adsorbant et l'adsorbat.

    **Interpr√©tation de \(R_L\) :**
    Le facteur de Langmuir, \(R_L\), donne une indication sur la favorabilit√© de l'adsorption. Il est calcul√© comme suit :

    \[
    R_L = \frac{1}{1 + K C_0}
    \]
    - Si \(R_L > 1\), l'adsorption est d√©favorable.
    - Si \(R_L = 1\), l'adsorption est lin√©aire.
    - Si \(0 < R_L < 1\), l'adsorption est favorable.
    - Si \(R_L = 0\), il y a une adsorption irr√©versible.

    #### 2. **Freundlich (Mod√®le √† deux param√®tres)**

    Le mod√®le de Freundlich est utilis√© pour les syst√®mes d'adsorption h√©t√©rog√®nes, o√π les sites d'adsorption n'ont pas la m√™me √©nergie. Ce mod√®le indique qu'il existe des sites d'adsorption avec des affinit√©s diff√©rentes pour l'adsorbat.

    **Param√®tres :**
    - \(K\) : Capacit√© d‚Äôadsorption relative (mg/g (L/g)‚Åø) ‚Äî Plus \(K\) est √©lev√©, plus l'adsorbant est efficace.
    - \(n\) : Indicateur de l'h√©t√©rog√©n√©it√© des sites ‚Äî Si \(n > 1\), l'adsorption est favorable ; sinon, elle est d√©favorable.

    #### 3. **Tempkin (Mod√®le √† deux param√®tres)**

    Le mod√®le de Tempkin d√©crit une adsorption qui d√©pend de l'enthalpie d'adsorption et du facteur de temp√©rature. Il est souvent utilis√© lorsque l'adsorption est exothermique et que les interactions entre les mol√©cules d'adsorbat ne peuvent pas √™tre ignor√©es.

    **Param√®tres :**
    - \(A\) : Constante d'√©quilibre.
    - \(B\) : Param√®tre li√© √† l'enthalpie d'adsorption.

    #### 4. **Dubinin-Radushkevich (Mod√®le √† deux param√®tres)**

    Ce mod√®le est utilis√© pour caract√©riser des surfaces d'adsorption h√©t√©rog√®nes et permet de mieux comprendre les m√©canismes d'adsorption de type chimique. Il est bas√© sur la notion de microporosit√©.

    **Param√®tres :**
    - \(q_m\) : Capacit√© d‚Äôadsorption maximale.
    - \(K\) : Constante qui prend en compte l'√©nergie de l'adsorption.

    #### 5. **Jovanovich (Mod√®le √† deux param√®tres)**

    Le mod√®le de Jovanovich est un mod√®le empirique qui est souvent utilis√© pour l'adsorption dans des syst√®mes complexes o√π les interactions entre les mol√©cules sont importantes.

    **Param√®tres :**
    - \(q_m\) : Capacit√© d'adsorption maximale.
    - \(K\) : Constante d'adsorption.

    #### 6. **Mod√®le personnalis√© (Mod√®le √† deux param√®tres)**

    Le mod√®le personnalis√© propos√© est bas√© sur des exponents de type fractionnaire, qui permettent de mod√©liser des m√©canismes d'adsorption complexes, souvent observ√©s dans les syst√®mes industriels.

    **Param√®tres :**
    - \(q_m\) : Capacit√© d'adsorption maximale.
    - \(K\) : Constante d'adsorption.

    #### 7. **Sips (Mod√®le √† trois param√®tres)**

    Ce mod√®le combine les aspects des mod√®les de Langmuir et de Freundlich. Il est utilis√© pour des surfaces ayant une distribution d'√©nergie non uniforme.

    **Param√®tres :**
    - \(q_m\) : Capacit√© maximale d'adsorption.
    - \(K\) : Constante d‚Äô√©quilibre.
    - \(n\) : Param√®tre qui modifie l'influence de la concentration.

    #### 8. **Toth (Mod√®le √† trois param√®tres)**

    Le mod√®le de Toth est utilis√© pour les syst√®mes h√©t√©rog√®nes o√π l'adsorption n'est pas lin√©aire, souvent en raison des effets de la temp√©rature ou de la pression.

    **Param√®tres :**
    - \(q_m\) : Capacit√© maximale d‚Äôadsorption.
    - \(K\) : Constante d‚Äô√©quilibre.
    - \(n\) : Param√®tre d'exponentiation.

    #### 9. **Khan (Mod√®le √† trois param√®tres)**

    Le mod√®le de Khan est utilis√© pour l'adsorption sur des surfaces non homog√®nes, souvent lorsque les sites d'adsorption sont influenc√©s par des facteurs ext√©rieurs.

    **Param√®tres :**
    - \(q_m\) : Capacit√© maximale d'adsorption.
    - \(K\) : Constante d‚Äô√©quilibre.
    - \(n\) : Param√®tre influen√ßant la forme de l‚Äôisotherme.

    #### 10. **Redlich-Peterson (Mod√®le √† trois param√®tres)**

    Ce mod√®le est souvent utilis√© dans les syst√®mes o√π les isothermes d'adsorption ne peuvent pas √™tre mod√©lis√©s par des mod√®les simples comme Langmuir ou Freundlich. Il est plus flexible pour s'adapter √† une grande vari√©t√© de syst√®mes.

    **Param√®tres :**
    - \(K\) : Constante d‚Äôadsorption.
    - \(a\) : Param√®tre influen√ßant la forme de l'isotherme.
    - \(g\) : Param√®tre li√© √† la concentration.

    ---
    """)



